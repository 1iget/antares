menu "Wireless devices"

config LIB_RF24_HAVE_AVRSPI
bool

menuconfig LIB_RF24
bool "nRF24L01 Support"

if LIB_RF24

   config LIB_RF24_PMGR
   bool "Pipe Manager"

   choice 
   prompt "Platform bindings"

   config LIB_RF24_BINDINGS_NONE
   bool "None"

   config LIB_RF24_AVR_SOFTSPI
   bool "AVR software SPI"
   select LIB_RF24_HAVE_AVRSPI

   config LIB_RF24_AVR_HARDSPI
   bool "AVR hardware SPI (Only first SPI for now)"
   select LIB_RF24_HAVE_AVRSPI

   endchoice

   menu "SPI Pin Settings"
   depends on LIB_RF24_HAVE_AVRSPI

   config LIB_RF24_CE_PIN
   int "CE Pin"
   default 0

   config LIB_RF24_CE_PORT
   string "CE Port"
   default "D"

   config LIB_RF24_CSN_PIN
   int "CSN Pin"
   default 0

   config LIB_RF24_CSN_PORT
   string "CSN Port"
   default "D"

   config LIB_RF24_SPI_PORT
   string "SPI Port"
   default "B"

   config LIB_RF24_SPI_MOSI_PIN
   int "SPI MOSI Pin"
   default "3"

   config LIB_RF24_SPI_MISO_PIN
   int "SPI MISO Pin"
   default "4"

   config LIB_RF24_SPI_SCK_PIN
   int "SPI SCK Pin"
   default "5"

   config LIB_RF24_SPI_SS_PIN
   int "SPI SS Pin (Must be output for master to work)"
   depends on LIB_RF24_AVR_HARDSPI
   default "2"

   endmenu


   config LIB_RF24_DEBUG
   int "Debugging verbosity (0-4)"
   default 0
   range 0 4 

   config LIB_RF24_SIZEOPT
   bool "Agressive size optimisation [DANGEROUS]"
   help
	This is a hacky option, that tries to make the 
	library smaller (for bootloaders). On AVRs this can
	reduce code size at up to one third. 
	Note: Only ONE instance of rf24 is supported when 
	running in this mode.

   config LIB_RF24_SWEEP
   bool "RF Sweeper library"
   default y
   help
	Utility functions to scan the spectrum, auto-pick unused channels, etc. 

   choice
   prompt "RF24 probe method"

   config LIB_RF24_SWEEP_CARRIER
   bool "Test for carrier"

   config LIB_RF24_SWEEP_RPD
   bool "Test for RPD ('+' hardware only)"

   endchoice
endif

endmenu
