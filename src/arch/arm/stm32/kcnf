choice 
prompt "STM32 Family"

config STM32F10X_LD  
bool "STM32 Low density devices"

config STM32F10X_LD_VL 
bool "STM32 Low density Value Line devices"

config STM32F10X_MD 
bool "STM32 Medium density devices"

config STM32F10X_MD_VL 
bool "STM32 Medium density Value Line devices"

config STM32F10X_HD 
bool "STM32 High density devices "

config STM32F10X_HD_VL 
bool "STM32 High density value line devices"

config STM32F10X_XL 
bool "STM32 XL-density devices "

config STM32F10X_CL  
bool "STM32 Connectivity line devices"

endchoice

config STM32_HSE_VALUE
int "HSE (Crystal) value in Hz"
help
	Use this to set the crystal freq accordingly. 
	It is used in some periph libs, and in regular 
	'SystemInit' function

choice
prompt "Target frequency (for SysInit)"

config STM32_FREQ_72
bool "72 Mhz"

config STM32_FREQ_56
bool "56 Mhz"

config STM32_FREQ_48
bool "48 Mhz"

config STM32_FREQ_36
bool "36 Mhz"

config STM32_FREQ_24
bool "24 Mhz"

config STM32_FREQ_HSE
bool "Use HSE"

endchoice


menuconfig STM32_OVERRIDE_BASES
bool "Overrride FLASH&RAM Base adresses"

if STM32_OVERRIDE_BASES

	config STM32_FLASH_BASE
        hex	"Base address of flash memory"
	default 0x08000000 if MCU_STM32

	config STM32_RAM_BASE
       	hex	"Base address of RAM memory"
	default 0x20000000 if MCU_STM32

endif


menu "Set RAM and FLASH sizes"
	config STM32_FLASH_LEN
	hex	"FLASH size"
	default 0x80000

	config STM32_RAM_LEN
	hex	"RAM size"
	default 0x10000 
endmenu

menuconfig STM32_SET_OFFSETS
bool "Configure code to run at offsets"

if STM32_SET_OFFSETS

   	config STM32_FLASH_OFFSET
	hex	"FLASH offset"
	default 0x5000

	config STM32_RAM_OFFSET
	hex	"RAM offset"
	default 0x0 
endif


config ARM_MINSTACK
hex "Minimal stack size"
default 0x200 if MCU_STM32

config ARM_MINHEAP
hex "Minimal heap size"
default 0x0 if MCU_STM32

menuconfig STM32_PLIBS
bool "Select STM32 libraries to build"

if STM32_PLIBS
	config	STM32_LIB_SYSTEM
	bool	"SystemInit"
	help
		System library for configuring clocks and such stuff
	
	config	STM32_LIB_ADC
	bool "ADC"
	
	config	STM32_LIB_BKP
	bool "BKP"
	
	config	STM32_LIB_CAN
	bool "CAN"
	
	config	STM32_LIB_CEC
	bool "CEC"
	
	config	STM32_LIB_CRC
	bool "CRC"	
		
	config	STM32_LIB_DAC
	bool "DAC"	

	config	STM32_LIB_DBGMCU
	bool "DBGMCU"	

	config	STM32_LIB_DMA
	bool "DMA"	
	
	config	STM32_LIB_EXTI
	bool "EXTI"	

	config	STM32_LIB_FLASH
	bool "FLASH"	

	config	STM32_LIB_FSMC
	bool "FSMC"
	
	config	STM32_LIB_GPIO
	bool "GPIO"	

	config	STM32_LIB_I2C
	bool "I2C"	

	config	STM32_LIB_IWDG
	bool "IWDG"

	config	STM32_LIB_PWR
	bool "PWR"	
	
	config	STM32_LIB_RCC
	bool "RCC"	
	
	config	STM32_LIB_RTC
	bool "RTC"
	
	config	STM32_LIB_SDIO
	bool "SDIO"	

	config	STM32_LIB_SPI
	bool "SPI"	

	config	STM32_LIB_TIM
	bool "TIM"	

	config	STM32_LIB_USART
	bool "USART"	

	config	STM32_LIB_WWDG
	bool "WWDG"		

endif

menuconfig STM32_EXTRA
bool "STM32 Extra drivers"

if STM32_EXTRA
	menuconfig STM32_SPIFLASH
	bool "SPI Flash driver"
	if STM32_SPIFLASH
		comment "ST's driver is ugly. Only once dev is supported"
		comment "It should be rewritten in a more portable manner"
		
		config STM32_SPIFLASH_GPIN
		string "CS PIN"
		default "GPIO_Pin_1"
		
		config STM32_SPIFLASH_GPORT
		string "CS PORT"
		default "GPIOA"
		
		config STM32_SPIFLASH_SPI
		string "SPI device"
		default "SPI1"		
	endif
	config STM32_UARTIO
	bool "USART STDIO support"
	help
		Provides simple io routines to USART

	
endif 

config STM32_FULL_ASSERT
bool "Use full assert in STM32 periph lib"




