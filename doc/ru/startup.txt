Antares startup code
---------------------

CONFIG_ANTARES_STARTUP=y


Этот файл описывает примерное назначение antares startup кода и с чем его надо употреблять. 
Стартап код работает на всех архитектурах, где есть gcc. 

На данный момент это MSP430, AVR, ARM.

Зачем?
-------

Когда мы пишем что-то, что имеет подключаемые (например через kconfig) куски, мы делаем так:

int main()
{
	init_spi()
	init_console();
	#ifdef SOME_CONFIG
	enabled_liba();
	#endif
	...
} 

И тому подобное. Это неудобно, так как печатать много. Antares стартап код позволяет вызвать
эту инициализацию и группировать из нескольких файлов автоматически. Почти так же как 
device_initcall() в linux kernel, только еще проще. 

Условно, процесс испольнения приложения мы можем представить вот таким образом: 

antares_init_low(); // Код инициализации до того, как будут включены глобально прерывания
antares_init_high(); //Код инициализации после того, как будут включены глобально прерывания  
while (1)
{
	antares_app(); //Код приложений. 
};


Для того, чтобы добавить код инициализации в группу antares_init_low() достаточно использовать
макрос ANTARES_INIT_LOW()

Например так: 
ANTARES_INIT_LOW(led_blink) 
{
	DDRA=0xff;
	PORTA=0xf0;
}

Функции объявленные таким образом будут автоматически исполнены в группе antares_init_low();
Аналогично, при помощи ANTARES_INIT_HIGH можно добавить код в группу antares_init_high();
А код для исполнения в главном цикле - через ANTARES_APP

Код приложений добавленных через ANTARES_APP будет выполняться в теле бесконечного цикла.


Известные баги
---------------
Не стоит полагаться на то, что код будет запущен именно в том порядке, в котором этого хочется. 
Порядок запуска разных функций определяется порядком линковки файлов. 
