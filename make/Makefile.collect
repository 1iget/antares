junk_filter=Makefile built-in.o kcnf
junk=$(addprefix |grep -v ,$(junk_filter))

ARCH?=arm

#This gets read&run by top level, therefore must have extra stuff

# 1 name, e.g. arch
# 2 (caps) name for kconfig symbol
# 3 path, must imply either TOPDIR or SRCDIR
# 4 method, e.g mk, mka, kcnf passed to listgen
# 5 extra args and > or >>; depends on whether we want a new file or append to the existing

# SILENT_GEN2 is used for canned stuff

define generate_dirlist
$(TMPDIR)/$(1).$(4): $(3)
	$(Q)[ -d $(TMPDIR) ] || mkdir -p $(TMPDIR)
	$(SILENT_GEN2) [ -d "$(3)" ] && ls $(3) $(junk)| \
		$(SRCDIR)/scripts/listgen $(2) $(4) $(5) $$@
endef

#Unifies several kcnf files into one include
# 1 - prefixname
# 2 - location
# 3 - rel location
# 4 - kconfig location

define unify_kcnf
$(TMPDIR)/all-$(1).kcnf:
	$(SILENT_GEN2) echo "#autogenerated, do not edit" > $$@;\
		for item in `ls $(2)/$(3) $(junk)`; do\
		[ -f $(2)/$(3)/$$$${item}/kcnf ] && \
		echo source \"$(4)/$(3)/$$$${item}/kcnf\" >> $$@;\
		done; echo "#done" >> $$@
endef



#TODO: Current generation method looks like smoking crap
#TODO: May be we need something better later 

#Architectures in-tree
$(eval $(call generate_dirlist,arch,ARCH,$(SRCDIR)/src/arch,mk, "=" >))
$(eval $(call generate_dirlist,arch,ARCH,$(SRCDIR)/src/arch,kcnf,>))
$(eval $(call unify_kcnf,arch,$(SRCDIR),src/arch,antares))

#Deploy methods in-tree
$(eval $(call generate_dirlist,deploy,DEPLOY,$(SRCDIR)/deploy,mk, "+=" >))
$(eval $(call generate_dirlist,deploy,DEPLOY,$(SRCDIR)/deploy,kcnf,>))
$(eval $(call unify_kcnf,deploy,$(SRCDIR),deploy,antares))


define gendirs
$(TMPDIR)/$(1).mk $(TMPDIR)/$(1).kcnf $(TMPDIR)/all-$(1).kcnf
endef 

#$(eval $(call gendirlist,arch,ARCH,src/arch,src/arch))
$(eval $(call gendirlist,deploy,DEPLOY,deploy,deploy))

checkdirs:
	$(Q)[ -d $(TOPDIR)/kconfig/lxdialog ] || mkdir -p $(TOPDIR)/kconfig/lxdialog
	$(Q)[ -d $(TOPDIR)/include ] || mkdir -p $(TOPDIR)/include
	$(Q)[ -d $(CONFIG_IMAGE_DIR) ] || mkdir -p $(CONFIG_IMAGE_DIR)


collectinfo: $(TMPDIR)/.collected

define check_tool
	$(SILENT_CHECK) $(1); $(1) >> /dev/null || (echo "Missing $(1), please check docs"; exit 1)
endef

checktools:
	$(call check_tool,bison --version)
	$(call check_tool,flex --version)
	$(call check_tool,gperf --version)

$(TMPDIR)/.collected:  checkdirs checktools \
	     $(call gendirs,arch) \
	     $(call gendirs,deploy)
	     $(Q)-rm -f $(OBJDIR)/include/arch
	     $(Q)ln -sf ../$(SRCDIR)/src/arch/$(ARCH)/include $(OBJDIR)/include/arch
	     $(Q)touch $(TMPDIR)/.collected


PHONY+=collectinfo
