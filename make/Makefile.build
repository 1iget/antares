#This is a makefile used in the actual build
#I didn't get enough dao to understand fully kbuild's magic and adopt it completely to small uCs like avr
#And ethersex's methods of compiling sucked, so I invented my own build script
#Yep, there goes some NIH syndrome =)
.SUFFIXES:

include $(TOPDIR)/.config
include $(ANTARES_DIR)/make/Makefile.lib
include $(SRCDIR)/Makefile
# VPATH = $(SRCDIR)


RELPATH = $(patsubst $(ANTARES_DIR)/%,%,$(SRCDIR))
#For retarded sdcc cases
objects-y:=$(patsubst %.o,%.$(O),$(objects-y))
objects-y+=$(foreach dir,$(subdirs-y),$(dir)/built-in.$(O))
gen-y+=$(foreach dir,$(subdirs-y),$(dir)/.genned)
PHONY+=$(foreach dir,$(subdirs-y),$(dir)/built-in.$(O))
clean-y+=$(foreach dir,$(subdirs-y),$(dir)/built-in.$(O))

#suck in dep files (if any)
-include $(OBJDIR)/*.d

# include $(SRCDIR)/toolchain/

# sources-y:=$(addprefix $(SRCDIR)/,$(objects-y))
# objects-y:=$(addprefix $(OBJDIR)/,$(objects-y))

PHONY:= build clean generate .genned

.genned: $(gen-y)
	$(Q) touch $(@)

%/.genned: 
	$(eval NEXT=$(subst $(OBJDIR)/,,$*))
	$(eval PHONY+=$(NEXT)/built-in.$(O))
	$(Q)mkdir -p $(OBJDIR)/$(NEXT)
	$(Q)$(MAKE) TOPDIR=$(TOPDIR) OBJDIR=$(OBJDIR)/$(NEXT) \
	SRCDIR=$(SRCDIR)/$(NEXT) TMPDIR=$(TMPDIR) \
	-C $(OBJDIR)/$(NEXT) \
	-f $(ANTARES_DIR)/make/Makefile.build -r generate	

%/built-in.$(O): $(TOPDIR)/include/generated/autoconf.h
	$(eval NEXT=$(subst $(OBJDIR)/,,$*))
	$(eval PHONY+=$(NEXT)/built-in.$(O))
	$(Q)mkdir -p $(OBJDIR)/$(NEXT)
	$(Q)$(MAKE) TOPDIR=$(TOPDIR) OBJDIR=$(OBJDIR)/$(NEXT) \
	SRCDIR=$(SRCDIR)/$(NEXT) TMPDIR=$(TMPDIR) \
	-C $(OBJDIR)/$(NEXT) \
	-f $(ANTARES_DIR)/make/Makefile.build -r build	

%.$(O): $(SRCDIR)/%.c 
	$(SILENT_CC) $(CC) $(CFLAGS)  -c  -o $(@) $< 

%.$(O): $(SRCDIR)/%.S 
	$(SILENT_AS) $(AS) $(ASFLAGS) -c -o $(@) $<

%.$(O): $(SRCDIR)/%.s 
	$(SILENT_AS) $(AS) $(ASFLAGS) -c -o $(@) $< 

build: built-in.$(O)

generate: .genned

ifneq ($(LD_NO_COMBINE),y)
ifeq ($(objects-y),)
built-in.$(O): 
	$(SILENT_AR) $(AR) c$(ARFLAGS) $@
else
built-in.$(O): $(objects-y)
	$(SILENT_LD) $(LD) -r -o $(@) $^ 
endif
else
built-in.$(O): $(objects-y)
	$(SILENT_GEN) echo "$(objects-y)" > $@
endif


.PHONY: $(PHONY) %/built-in.$(O)
.PRECIOUS: $(build_objects)
